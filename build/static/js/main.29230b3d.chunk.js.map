{"version":3,"sources":["images/StandardOfficeSupplies.png","pages/Home.js","pages/Field.js","pages/ProgressBar.js","pages/Config.js","pages/Signup.js","pages/Success.js","pages/Liveness.js","pages/TemplateSelector.js","pages/TemplateRequest.js","pages/App.js","index.js"],"names":["module","exports","Home","to","Field","props","onChange","event","id","value","target","setState","error","state","focussed","locked","label","this","fieldClassName","className","type","placeholder","onFocus","onBlur","htmlFor","Component","defaultProps","predicted","StepProgressBar","percentComplete","percent","filledBackground","React","verifyApiPassword","companyLogo","require","Signup","handleChange","email","firstname","lastname","submitted","buttonText","totalSteps","progress","bind","handleSubmit","increaseAmount","axios","method","url","data","headers","then","response","oktaUserId","auth","username","password","Config","responseType","userIdentityToken","initialSleep","a","milliseconds","Promise","resolve","setTimeout","includes","alert","updateProgress","createOktaRequest","createEvidentRequest","evidentUrl","window","location","replace","loadingImg","src","alt","disabled","onClick","Success","handleEmailChange","class","Liveness","TemplateSelector","templates","dropdownTitle","templateSelected","redirect","onSelect","templateMap","forEach","template","requestTemplates","createTemplateMap","console","log","eventKey","_event","Object","keys","length","getTemplates","dropdownItems","map","templateId","Dropdown","Item","key","DropdownButton","title","variant","TemplateRequest","params","queryString","parse","search","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.29230b3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/StandardOfficeSupplies.16dda9d0.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => (\n  <div>\n    <h1>Welcome!</h1>\n     <h3>Options include</h3>\n    <nav>\n    <ul>\n        <li><Link to='/'>Home</Link></li>\n        <br />\n        <li><Link to='/signup'>US IDV plus Selfie</Link></li>\n        <br />\n        <li><Link to='/liveness-signup'>Liveness Verification</Link></li>\n        <br />\n        <li><Link to='/choose-template'>Choose Template and Make Request</Link></li>\n        <br />\n        <li><Link to='/success'>Success Page</Link></li>\n    </ul>\n    </nav>\n  </div>\n)\n\nexport default Home\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './field.css'\n\nexport default class Field extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        locked: PropTypes.bool,\n        focussed: PropTypes.bool,\n        value: PropTypes.string,\n        error: PropTypes.string,\n        label: PropTypes.string,\n        onChange: PropTypes.func,\n    };\n    static defaultProps = {\n        locked: false,\n        focussed: false,\n        value: '',\n        error: '',\n        label: '',\n        predicted: '',\n        onChange: () => '',\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            focussed: (props.locked && props.focussed) || false,\n            value: props.value || '',\n            error: props.error || '',\n            label: props.label || '',\n        };\n    }\n\n    onChange = event => {\n        const { id } = this.props;\n        const value = event.target.value;\n        this.setState({ value, error: '' });\n        return this.props.onChange(id, value);\n      }\n\n\n    render() {\n        const { focussed, value, error, label } = this.state;\n        const { id, locked } = this.props;\n        const fieldClassName = `field ${(locked ? focussed : focussed || value) && 'focussed'} ${locked && !focussed && 'locked'}`;\n        return (\n          <div className={fieldClassName}>\n            <input\n                id={id}\n                type=\"text\"\n                value={value}\n                placeholder={focussed ? null: label }\n                onChange={this.onChange}\n                onFocus={() => !locked && this.setState({ focussed: true })}\n                onBlur={() => !locked && this.setState({ focussed: false })}\n            />\n            <label htmlFor={id} className={error && 'error'}>\n                {error || label}\n            </label>\n          </div>\n        );\n  }\n}","import React from \"react\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar } from \"react-step-progress-bar\";\n\nexport default class StepProgressBar extends React.Component {\n  render() {\n    const { percentComplete } = this.props;\n    return (\n      <ProgressBar\n        percent={percentComplete}\n        filledBackground=\"linear-gradient(to right, #8DB2D1, #3E99E5)\" />\n    );\n  }\n}","export const verifyApiUsername = 'standardoffice'\nexport const verifyApiPassword = '4NIv_yT6PCCYRR5pR4TFNUTSM4JeQBp91Vh2WpPHDR0'\nexport const oktaApiToken = '00UztsnXnxBIgy4dvYz2g6aHB18e_3SLQKuzSxQ8tJ'\n\nexport const livenessTemplateId = '5985d434-9aae-4dc8-9558-ce9e63e1d00f'\nexport const oktaCompatableTempleId = '1009943b-a651-4c27-9bd1-25b53dcd7de8'","import axios from 'axios'\nimport React from 'react';\nimport './signup.css';\nimport Field from './Field'\nimport StepProgressBar from './ProgressBar'\nimport \"react-step-progress-bar/styles.css\";\nimport * as Config from './Config'\n\nconst companyLogo = require('../images/StandardOfficeSupplies.png');\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        firstname: '',\n        lastname: '',\n        submitted: false, \n        buttonText: 'Submit',\n        totalSteps: 3,\n        progress: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  async updateProgress(buttonText) {\n    const increaseAmount = 100 / this.state.totalSteps;\n    this.setState({progress: this.state.progress + increaseAmount, \n                   buttonText: buttonText})\n }\n\n  handleChange = (id, value) => {\n    if (id === 'email-input') {\n      this.setState({email: value});\n    }\n    if (id === 'firstname-input') {\n      this.setState({firstname: value});\n    }\n    if (id === 'lastname-input') {\n      this.setState({lastname: value});\n    }\n  }\n\nasync createOktaRequest() {\n    return axios({\n      method: 'POST',\n      url: 'https://dev-229401-admin.oktapreview.com/api/v1/users?activate=false',\n      data: {\n        \"profile\": {\n          \"firstName\": this.state.firstname,\n          \"lastName\": this.state.lastname,\n          \"email\": this.state.email,\n          \"login\": this.state.email,\n          \"evidentid_verification\": \"requested\"\n        }\n      },\n      headers: {\n        'Authorization': 'SSWS ' + Config.oktaApiToken, \n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      }\n    })\n    .then(response => {\n      let oktaUserId = response.data.id\n      return oktaUserId\n    })\n   }\n\nasync createEvidentRequest(oktaUserId) {\n  return axios({\n    method: 'POST',\n    url: 'https://verify.api.demo.evidentid.com/api/v1/verify/requests',\n    data: {\n      \"email\": this.state.email,\n      \"notes\": '{\"okta_context\": {\"user_id\": \"'+ oktaUserId + '\"}}',\n      \"templateId\" : Config.oktaCompatableTempleId\n    },\n    auth: {\n      username: Config.verifyApiUsername,\n      password: Config.verifyApiPassword,\n    },\n    responseType: 'application/json'\n  })\n  .then(response => {\n    let authToken = response.data.userIdentityToken\n    let redirect_url = 'https://idoweb.api.demo.evidentid.com/api/v1/auth?auth_token=' + authToken;\n    return redirect_url\n  })\n }\n  \n async handleSubmit(event) {\n  const initialSleep = async (milliseconds=10) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n  \n  // Janky email validation. Upgrade in the future. All these required by Okta\n  if (!this.state.email || !this.state.email.includes('@') || !this.state.email.includes('.com')) {\n    alert('Please provide a valid email address');\n    return;\n  }\n  // We need first name and unique last name for okta piece.\n  // Okta users must be unique by name. If user with same name exists, endpiont 400's\n  if (!this.state.firstname) {\n    alert('Please provide a first name');\n    return;\n  }\n  if (!this.state.lastname) {\n    alert('Please provide a last name (Unqiue to okta tenant)');\n    return;\n  }\n\n  // Create okta request, then use oktaID to request Evident request, then reidrect user to Evident\n  this.setState({submitted: true})\n  await initialSleep() // needed to help load the progress bar properly\n  await this.updateProgress('Creating Okta User')\n  const oktaUserId = await this.createOktaRequest()\n  await this.updateProgress('Creating Evident Request')\n  const evidentUrl =  await this.createEvidentRequest(oktaUserId)\n  await this.updateProgress('Redirecting User')\n  window.location.replace(evidentUrl)\n}\n\n\n  render() {\n    const loadingImg = this.state.submitted ? <StepProgressBar percentComplete={this.state.progress} /> : null;\n    return (\n      <div className=\"main-container\">\n        <div className=\"topbar\" >       \n          <img className=\"logo\" src={companyLogo} alt='company-logo'/>\n        </div>\n        <div className=\"main-entry-box\">\n          <div className=\"create-account\">\n            Create a new account\n          </div>\n          <Field label='Email Address' id='email-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='First Name' id='firstname-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='Last Name' id='lastname-input' type=\"text\"  onChange={this.handleChange}/>\n          <button className={this.state.submitted ? \"clicked-button\" : \"submit-button\"} disabled={this.state.submitted} onClick={this.handleSubmit}>\n            {this.state.buttonText}\n          </button>\n          <div className='loading-image'>\n              {loadingImg}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","import React from 'react';\nimport './success.css';\nconst companyLogo = require('../images/StandardOfficeSupplies.png');\n\n\n\nclass Success extends React.Component {\n\n  handleEmailChange = (event) => {\n    this.setState({email: event.target.value});\n  }\n\n  handleChange(event) {\n    return;\n  }\n\n  handleSubmit(event) {\n    alert('Continue with portal/application');\n  }\n\n  render() {\n    return (\n      <div class=\"main-container\">\n        <div class=\"topbar\" >       \n          <img class=\"logo\" src={companyLogo} alt='task-cheetah-logo'/>\n        </div>\n        <div className=\"main-entry-box\">\n          <div className=\"success-message\">\n            Thanks For Verifying Your Identity.\n          </div>\n          <button className='continue-button' onClick={this.handleSubmit}>\n            Continue\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Success;","import axios from 'axios'\nimport React from 'react';\nimport './signup.css';\nimport Field from './Field'\nimport StepProgressBar from './ProgressBar'\nimport \"react-step-progress-bar/styles.css\";\nimport * as Config from './Config'\n\n// Get image for logos\nconst companyLogo = require('../images/StandardOfficeSupplies.png');\n\nclass Liveness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        firstname: '',\n        lastname: '',\n        submitted: false, \n        buttonText: 'Submit',\n        totalSteps: 2,\n        progress: 0,\n};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (id, value) => {\n    if (id === 'email-input') {\n      this.setState({email: value});\n    }\n    if (id === 'firstname-input') {\n      this.setState({firstname: value});\n    }\n    if (id === 'lastname-input') {\n      this.setState({lastname: value});\n    }\n  }\n \n  async updateProgress(buttonText) {\n    const increaseAmount = 100 / this.state.totalSteps;\n    this.setState({progress: this.state.progress + increaseAmount, \n                   buttonText: buttonText})\n }\n\nasync createEvidentRequest(oktaUserId) {\n  return axios({\n    method: 'POST',\n    url: 'https://verify.api.demo.evidentid.com/api/v1/verify/requests',\n    data: {\n      \"email\": this.state.email,\n      \"templateId\" : Config.livenessTemplateId,\n    },\n    auth: {\n      username: Config.verifyApiUsername,\n      password: Config.verifyApiPassword,\n    },\n    responseType: 'application/json'\n  })\n  .then(response => {\n    let authToken = response.data.userIdentityToken\n    let redirect_url = 'https://idoweb.api.demo.evidentid.com/api/v1/auth?auth_token=' + authToken;\n    return redirect_url\n  })\n }\n  \n  async handleSubmit(event) {\n    const initialSleep = async (milliseconds=10) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    // Janky email validation. Upgrade in the future\n    if (!this.state.email || !this.state.email.includes('@') || !this.state.email.includes('.com')) {\n      alert('Please provide a valid email address');\n      return;\n    }\n    this.setState({submitted: true})\n    await initialSleep() // needed to help load the progress bar properly\n    await this.updateProgress('Creating Evident Request')\n    const evidentUrl = await this.createEvidentRequest('oktaUserIDGoesHere')\n    await this.updateProgress('Redirecting User')\n    window.location.replace(evidentUrl)\n  }\n\n\n  render() {\n    const loadingImg = this.state.submitted ? <StepProgressBar percentComplete={this.state.progress} /> : null;\n    return (\n      <div className=\"main-container\">\n        <div className=\"topbar\" >       \n          <img className=\"logo\" src={companyLogo} alt='company-logo'/>\n        </div>\n        <div className=\"main-entry-box\">\n          <div className=\"create-account\">\n            Create a new account\n          </div>\n          <Field label='Email Address' id='email-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='First Name' id='firstname-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='Last Name' id='lastname-input' type=\"text\"  onChange={this.handleChange}/>\n          <button className={this.state.submitted ? \"clicked-button\" : \"submit-button\"} disabled={this.state.submitted} onClick={this.handleSubmit}>\n            {this.state.buttonText}\n          </button>\n          <div className='loading-image'>\n              {loadingImg}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Liveness;\n","import axios from 'axios'\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport './signup.css';\nimport * as Config from './Config'\n\n\n// Get image for logos\nconst companyLogo = require('../images/StandardOfficeSupplies.png');\n\nclass TemplateSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        submitted: false, \n        templates: {},\n        dropdownTitle: 'Choose A Template',\n        templateSelected: null,\n        redirect: null\n};\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSelect = this.onSelect.bind(this)\n  }\n\n\nasync createEvidentRequest(oktaUserId) {\n  const templateId= \"5985d434-9aae-4dc8-9558-ce9e63e1d00f\" //this is the liveness templateID\n  return axios({\n    method: 'POST',\n    url: 'https://verify.api.demo.evidentid.com/api/v1/verify/requests',\n    data: {\n      \"email\": this.state.email,\n      \"templateId\" : templateId\n    },\n    auth: {\n      username: Config.verifyApiUsername,\n      password: Config.verifyApiPassword,\n    },\n    responseType: 'application/json'\n  })\n  .then(response => {\n    let authToken = response.data.userIdentityToken\n    let redirect_url = 'https://idoweb.api.demo.evidentid.com/api/v1/auth?auth_token=' + authToken;\n    return redirect_url\n  })\n }\n\n createTemplateMap(templates) {\n  const templateMap = {}\n  templates.forEach(template =>\n    templateMap[template['_id']] = template['name']\n  )\n  return templateMap\n}\n  \n async getTemplates() {\n  const username = \"standardoffice\"\n  const password = Config.verifyApiPassword\n  return axios({\n    method: 'GET',\n    url: 'https://verify.api.demo.evidentid.com/api/v1/verify/requestTemplates',\n    auth: {\n      username,\n      password,\n    },\n    responseType: 'application/json'\n  })\n  .then(response => {\n    let templates = response.data.requestTemplates\n    return templates\n  })\n  .then(templates => {\n    return this.createTemplateMap(templates)\n  })\n  .then(templates => this.setState({templates: templates}))\n }\n\n\n\n  async handleSubmit(event) {\n    console.log('Redirecting to ', this.state.templateSelected)\n    this.setState({redirect: 'request?templateId=' + this.state.templateSelected})\n  }\n\n\n  async onSelect(eventKey, _event) {\n    this.setState({dropdownTitle: this.state.templates[eventKey], templateSelected: eventKey})\n  }\n\n  render() {\n    if (Object.keys(this.state.templates).length === 0) {\n      this.getTemplates()\n    }\n    // Set up dropdown items from templates\n    const templateIds = Object.keys(this.state.templates)\n    const dropdownItems = templateIds.map(templateId => (\n      <Dropdown.Item key={templateId} eventKey={templateId} onSelect={this.onSelect}>{this.state.templates[templateId]}</Dropdown.Item>\n      ));\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div className=\"main-container\">\n        <div className=\"topbar\" >       \n          <img className=\"logo\" src={companyLogo} alt='company-logo'/>\n        </div>\n        <div className=\"main-entry-box\">\n          <br  />\n          <DropdownButton id=\"dropdown-item-button\" title={this.state.dropdownTitle} variant='primary'>\n            {dropdownItems}\n           </DropdownButton>\n          <button className={this.state.submitted ? \"clicked-button\" : \"submit-button\"} disabled={!this.state.templateSelected} onClick={this.handleSubmit}>\n            Begin Application\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TemplateSelector;\n","import axios from 'axios'\nimport React from 'react';\nimport './signup.css';\nimport Field from './Field'\nimport StepProgressBar from './ProgressBar'\nimport \"react-step-progress-bar/styles.css\";\nimport queryString from 'query-string';\nimport * as Config from './Config'\n\n\n// Get image for logos\nconst companyLogo = require('../images/StandardOfficeSupplies.png');\n\nclass TemplateRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        firstname: '',\n        lastname: '',\n        submitted: false, \n        buttonText: 'Submit',\n        totalSteps: 2,\n        progress: 0,\n};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (id, value) => {\n    if (id === 'email-input') {\n      this.setState({email: value});\n    }\n    if (id === 'firstname-input') {\n      this.setState({firstname: value});\n    }\n    if (id === 'lastname-input') {\n      this.setState({lastname: value});\n    }\n  }\n \n  async updateProgress(buttonText) {\n    const increaseAmount = 100 / this.state.totalSteps;\n    this.setState({progress: this.state.progress + increaseAmount, \n                   buttonText: buttonText})\n }\n\nasync createEvidentRequest(oktaUserId) {\n  const params = queryString.parse(this.props.location.search)\n  console.log('Query Params: ', params)\n  const templateId= params['templateId']\n    return axios({\n    method: 'POST',\n    url: 'https://verify.api.demo.evidentid.com/api/v1/verify/requests',\n    data: {\n      \"email\": this.state.email,\n      \"templateId\" : templateId\n    },\n    auth: {\n      username: Config.verifyApiUsername,\n      password: Config.verifyApiPassword,\n    },\n    responseType: 'application/json'\n  })\n  .then(response => {\n    let authToken = response.data.userIdentityToken\n    let redirect_url = 'https://idoweb.api.demo.evidentid.com/api/v1/auth?auth_token=' + authToken;\n    return redirect_url\n  })\n }\n  \n  async handleSubmit(event) {\n    const initialSleep = async (milliseconds=10) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    // Janky email validation. Upgrade in the future\n    if (!this.state.email || !this.state.email.includes('@') || !this.state.email.includes('.com')) {\n      alert('Please provide a valid email address');\n      return;\n    }\n    this.setState({submitted: true})\n    await initialSleep() // needed to help load the progress bar properly\n    await this.updateProgress('Creating Evident Request')\n    const evidentUrl = await this.createEvidentRequest('oktaUserIDGoesHere')\n    await this.updateProgress('Redirecting User')\n    window.location.replace(evidentUrl)\n  }\n\n\n  render() {\n    const loadingImg = this.state.submitted ? <StepProgressBar percentComplete={this.state.progress} /> : null;\n    return (\n      <div className=\"main-container\">\n        <div className=\"topbar\" >       \n          <img className=\"logo\" src={companyLogo} alt='company-logo'/>\n        </div>\n        <div className=\"main-entry-box\">\n          <div className=\"create-account\">\n            Create a new account\n          </div>\n          <Field label='Email Address' id='email-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='First Name' id='firstname-input' type=\"text\" onChange={this.handleChange}/>\n          <Field label='Last Name' id='lastname-input' type=\"text\"  onChange={this.handleChange}/>\n          <button className={this.state.submitted ? \"clicked-button\" : \"submit-button\"} disabled={this.state.submitted} onClick={this.handleSubmit}>\n            {this.state.buttonText}\n          </button>\n          <div className='loading-image'>\n              {loadingImg}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TemplateRequest;\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Home'\nimport Signup from './Signup'\nimport Success from './Success'\nimport Liveness from './Liveness'\nimport TemplateSelector from './TemplateSelector'\nimport TemplateRequest from './TemplateRequest'\n\nconsole.log('TEST')\n\n// The Main component renders one of the three provided\n// Routes (provided that one matches). Both the /roster\n// and /schedule routes will match any pathname that starts\n// with /roster or /schedule. The / route will only match\n// when the pathname is exactly the string \"/\"\nconst App = () => (\n    <div>\n      <main>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/signup' component={Signup}/>\n          <Route path='/liveness-signup' component={Liveness}/>\n          <Route path='/success' component={Success}/>\n          <Route path='/choose-template' component={TemplateSelector}/>\n        </Switch>\n        <Route path='/request' component={TemplateRequest}/>\n      </main>\n    </div>\n)\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './pages/App';\n\n\nrender((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}